#include <iostream>
#include <vector>
#include <set>


using namespace std;

long long gcd(long long a, long long b) {
	if (a == 0) {
		return b;
	}
    if (a > b) {
        swap(a, b);
    }

	return gcd(b % a, a);
}


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    long long n;
    cin >> n;
    vector<long long> a(n);
    long long gen_gcd = 0;
    long long number_of_1 = 0;
    for (long long i = 0; i < n; ++i) {
        cin >> a[i];

        if (a[i] == 1) {
            ++number_of_1;
        }

        if (i == 0) {
            gen_gcd = a[i];
        }
        else {
            gen_gcd = gcd(gen_gcd, a[i]);
        }
    }

    if (gen_gcd > 1) {
        cout << -1;
    }
    else if (number_of_1 != 0) {
        cout << n - number_of_1;
    }
    else {
        long long min_dec = 1000000001;
        for (long long i = 0; i < n; ++i) {
            long long temp = a[i];
            for (long long j = i + 1; j < n; ++j) {
                temp = gcd(temp, a[j]);
                if (temp == 1) {
                    min_dec = min(min_dec, j - i + 1);
                    break;
                }
            }
        }

        cout << n + min_dec - 2;
    }

    return 0;
}